<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>